<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>